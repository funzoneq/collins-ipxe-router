#Generated by Kickstart Configurator
#platform=x86

# Fetch content from here
url --url <%= ubuntu_mirror %>

#System language
lang en_US.UTF-8

#Language modules to install
langsupport en_US.UTF-8

#System keyboard
keyboard us

#System timezone
timezone Etc/UTC

#Enable debug logging
logging --level=debug

#Root password
rootpw --disabled

#Initial user (user with sudo capabilities) 
user <%= initial_user %> --fullname "<%= initial_fullname %>" --password <%= initial_pass %>

# Use cmdline mode install for more debugging than text
cmdline

# Do not configure the X Window System
skipx

#Install OS instead of upgrade
install

#System bootloader configuration
bootloader --location=mbr 

#Clear the Master Boot Record
zerombr yes

#Partition clearing information
clearpart --all --initlabel 

#Basic disk partition
part / --fstype ext4 --size 1 --grow --asprimary 
part swap --size 16384 
part /boot --fstype ext4 --size 512 --asprimary

#System authorization infomation
auth  --useshadow  --enablemd5

#Network information
network --device=bond0 --bootproto=static --onboot=yes --hostname=<%= asset.hostname %> --ip=<%= bond0.address %> --netmask=<%= bond0.netmask %> --gateway=<%= bond0.gateway %> --nameserver=<%= recursive_dns.join(" ") %> --bondslaves=em1,em2 --bondopts=mode=4,miimon=100,downdelay=200,updelay=200,xmit_hash_policy=layer2+3,lacp_rate=slow

network --device=bond1 --bootproto=static --onboot=yes --hostname=<%= asset.hostname %> --ip=<%= bond1.address %> --netmask=<%= bond1.netmask %> --nodns --bondslaves=em3,em4 --bondopts=mode=4,miimon=100,downdelay=200,updelay=200,xmit_hash_policy=layer2+3,lacp_rate=slow

# bond slaves
network --device=em1 --nodns --bootproto=static --onboot=yes
network --device=em2 --nodns --bootproto=static --onboot=yes
network --device=em3 --nodns --bootproto=static --onboot=yes
network --device=em4 --nodns --bootproto=static --onboot=yes

#Firewall configuration
firewall --disabled

#Reboot after installation
reboot

#Package install information
%packages
ubuntu-minimal
openssh-server
screen
curl
wget
acpid
unattended-upgrades
linux-image-generic
python-apt
lshw
lldpd
dmidecode
ifenslave-2.6
ethtool

%post --interpreter=/bin/bash --logfile /root/ks-post.log

# This is the trick â€” automatically switch to 6th console
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6

echo "alias netdev-bond0 bonding" > /etc/modprobe.d/bonding.conf
echo "alias netdev-bond1 bonding" >> /etc/modprobe.d/bonding.conf

cp /etc/network/interfaces /etc/network/interfaces.backup.$(date "+%Y-%m-%d")

cat << EOF > /etc/network/interfaces.ks
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
 
# The loopback network interface
auto lo
iface lo inet loopback

auto em1
iface em1 inet manual
bond-master bond0

auto em2
iface em2 inet manual
bond-master bond0

auto em3
iface em3 inet manual
bond-master bond1

auto em4
iface em4 inet manual
bond-master bond1

auto bond1
iface bond1 inet static
address <%= bond1.address %>
netmask  <%= bond1.netmask %>
bond-mode 4
bond_miimon 100
bond_downdelay 200
bond_updelay 200
bond_xmit_hash_policy layer2+3
bond_lacp_rate slow

auto bond0
iface bond0 inet static
address <%= bond0.address %>
netmask <%= bond0.netmask %>
gateway <%= bond0.gateway %>
dns-nameservers <%= recursive_dns.join(" ") %>
bond-mode 4
bond_miimon 100
bond_downdelay 200
bond_updelay 200
bond_xmit_hash_policy layer2+3
bond_lacp_rate slow

iface bond0 inet6 static
address <%= ipv6_prefix %><%= bond0.address.split(".")[3] %>
netmask 64
gateway <%= ipv6_prefix %>1
EOF

# Update collins status to Provisioned cause we are done
/usr/bin/curl --basic -H "Accept: text/plain" -u '<%= collins.username %>:<%= collins.password %>' -d 'status=Provisioned' -d 'reason=Kickstarted' -d 'state=RUNNING' <%= collins.host %>/api/asset/<%= asset.tag %>/status

# We can break into a shell prompt for debugging
#/bin/sh

# Then switch back to Anaconda on the first console
chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1

