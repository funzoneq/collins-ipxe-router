#Generated by Kickstart Configurator
#platform=x86

# Fetch content from here
url --url <%= ubuntu_mirror %>

#System language
lang en_US.UTF-8

#Language modules to install
langsupport en_US.UTF-8

#System keyboard
keyboard us

#System timezone
timezone Etc/UTC

#Enable debug logging
logging --level=debug

#Root password
rootpw --disabled

#Initial user (user with sudo capabilities) 
user <%= initial_user %> --fullname "<%= initial_fullname %>" --password <%= initial_pass %>

# Use cmdline mode install for more debugging than text
cmdline

# Do not configure the X Window System
skipx

#Install OS instead of upgrade
install

#System bootloader configuration
bootloader --location=mbr

#Clear the Master Boot Record
zerombr yes

#Partition clearing information
<% if asset.nodeclass == 'edge' %>
clearpart --initlabel --all --drives=sda,sdb,sdc
<% else %>
clearpart --initlabel --all
<% end %>

#Basic disk partition
part swap       --size 16384 --ondisk=sda
part /          --fstype ext4 --size 1 --grow --asprimary --ondisk=sda
part /boot      --fstype ext4 --size 512 --asprimary --ondisk=sda
part /tmp       --fstype ext4 --size 5120 --ondisk=sda --fsoptions="nodev,noexec,nosuid"
<% if asset.nodeclass == 'edge' %>
part /var/log   --fstype ext4 --size=1024 --ondisk=sdb --grow
part /cache     --fstype ext4 --size=1024 --ondisk=sdc --grow
<% end %>

#System authorization infomation
auth  --useshadow  --enablemd5

#Network information
network --bootproto=dhcp --hostname=<%= asset.hostname %>

#Firewall configuration
firewall --disabled

#Reboot after installation
reboot

#Package install information
%packages
ubuntu-minimal
openssh-server
screen
curl
wget
acpid
unattended-upgrades
linux-image-generic
python-apt
lshw
lldpd
dmidecode
ifenslave-2.6
ethtool

%post --interpreter=/bin/bash

# This is the trick â€” automatically switch to 6th console
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6

echo "alias netdev-bond0 bonding" > /etc/modprobe.d/bonding.conf
echo "alias netdev-bond1 bonding" >> /etc/modprobe.d/bonding.conf

cat << EOF > /etc/network/interfaces.ks
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
 
# The loopback network interface
auto lo
iface lo inet loopback

source /etc/network/interfaces.d/*.cfg
EOF

for INF in $(ls /sys/class/net/|egrep -v 'lo|bond'); do
cat << EOF > /etc/network/interfaces.d/$INF.cfg
auto $INF
iface $INF inet manual
#bond-master bond0
EOF
done

cat << EOF > /etc/network/interfaces.d/bond1.cfg
auto bond1
iface bond1 inet static
address <%= bond1.address %>
netmask  <%= bond1.netmask %>
bond-mode 4
bond_miimon 100
bond_downdelay 200
bond_updelay 200
bond_xmit_hash_policy layer2+3
bond_lacp_rate slow
EOF

cat << EOF > /etc/network/interfaces.d/bond0.cfg
auto bond0
iface bond0 inet static
address <%= bond0.address %>
netmask <%= bond0.netmask %>
gateway <%= bond0.gateway %>
dns-nameservers <%= recursive_dns.join(" ") %>
bond-mode 4
bond_miimon 100
bond_downdelay 200
bond_updelay 200
bond_xmit_hash_policy layer2+3
bond_lacp_rate slow

iface bond0 inet6 static
address <%= ipv6_prefix %><%= bond0.address.split(".")[3] %>
netmask 64
gateway <%= ipv6_prefix %>1
EOF

<% aliasses.each_with_index do |a,k| %>
cat << EOF > /etc/network/interfaces.d/bond0:<%= k %>.cfg
auto bond0:<%= k %>
iface bond0:<%= k %> inet static
address <%= a.address %>
netmask <%= a.netmask %>
EOF
<% end %>

# Move /etc/network/interfaces.ks on first boot
sed -i "/exit 0/c\[ -f \/etc\/network\/interfaces.ks \] && mv \/etc\/network\/interfaces.ks \/etc\/network\/interfaces\nexit 0" /etc/rc.local

# Update collins status to Provisioned cause we are done
/usr/bin/curl --basic -H "Accept: text/plain" -u '<%= collins.username %>:<%= collins.password %>' -d 'status=Provisioned' -d 'reason=Kickstarted' -d 'state=RUNNING' <%= collins.host %>/api/asset/<%= asset.tag %>/status

# We can break into a shell prompt for debugging
# /bin/sh

# Then switch back to Anaconda on the first console
chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1

