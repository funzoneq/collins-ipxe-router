#!/bin/bash

echo "alias netdev-bond0 bonding" > /etc/modprobe.d/bonding.conf
echo "alias netdev-bond1 bonding" >> /etc/modprobe.d/bonding.conf

cat << EOF > /etc/network/interfaces.ks
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
 
# The loopback network interface
auto lo
iface lo inet loopback

source /etc/network/interfaces.d/*.cfg
EOF

for INF in $(ls /sys/class/net/|egrep -v 'lo|bond'); do
cat << EOF > /etc/network/interfaces.d/$INF.cfg
auto $INF
iface $INF inet manual
#bond-master bond0
EOF
done

cat << EOF > /etc/network/interfaces.d/bond1.cfg
auto bond1
iface bond1 inet static
address <%= bond1.address %>
netmask  <%= bond1.netmask %>
bond-mode 4
bond_miimon 100
bond_downdelay 200
bond_updelay 200
bond_xmit_hash_policy layer2+3
bond_lacp_rate slow
EOF

cat << EOF > /etc/network/interfaces.d/bond0.cfg
auto bond0
iface bond0 inet static
address <%= bond0.address %>
netmask <%= bond0.netmask %>
gateway <%= bond0.gateway %>
dns-nameservers <%= recursive_dns.join(" ") %>
bond-mode 4
bond_miimon 100
bond_downdelay 200
bond_updelay 200
bond_xmit_hash_policy layer2+3
bond_lacp_rate slow

iface bond0 inet6 static
address <%= ipv6_prefix %><%= bond0.address.split(".")[3] %>
netmask 64
gateway <%= ipv6_prefix %>1
EOF

<% aliasses.each_with_index do |a,k| %>
cat << EOF > /etc/network/interfaces.d/bond0:<%= k %>.cfg
auto bond0:<%= k %>
iface bond0:<%= k %> inet static
address <%= a.address %>
netmask <%= a.netmask %>
EOF
<% end %>

<% if asset.nodeclass == 'edge' %>
mkfs.ext4 /dev/sdb1
mkfs.xfs /dev/sdc1

mkdir /cache
mkdir /var/log/nginx

UUID=$(blkid -o value -s UUID /dev/sdb1)

cat << EOF >> /etc/fstab
# /var/log/nginx was on /dev/sdb1 during installation
UUID=$UUID /var/log/nginx   ext4    defaults    0   0
EOF

UUID=$(blkid -o value -s UUID /dev/sdc1)

cat << EOF >> /etc/fstab
# /cache was on /dev/sdc1 during installation
UUID=$UUID /cache   xfs    defaults    0   0
EOF
<% end %>

# Move /etc/network/interfaces.ks on first boot
sed -i "/exit 0/c\[ -f \/etc\/network\/interfaces.ks \] && mv \/etc\/network\/interfaces.ks \/etc\/network\/interfaces\nexit 0" /etc/rc.local

# Update collins status to Provisioned cause we are done
/usr/bin/curl --basic -H "Accept: text/plain" -u '<%= collins.username %>:<%= collins.password %>' -d 'status=Provisioned' -d 'reason=Kickstarted' -d 'state=RUNNING' <%= collins.host %>/api/asset/<%= asset.tag %>/status